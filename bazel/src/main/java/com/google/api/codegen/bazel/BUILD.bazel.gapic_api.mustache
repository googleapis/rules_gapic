# This file was automatically generated by BuildFileGenerator
# https://github.com/googleapis/rules_gapic/tree/master/bazel

# Most of the manual changes to this file will be overwritten.
# It's **only** allowed to change the following rule attribute values:
# - names of *_gapic_assembly_* rules
# - certain parameters of *_gapic_library rules, including but not limited to:
#    * extra_protoc_parameters
#    * extra_protoc_file_parameters
# The complete list of preserved parameters can be found in the source code.

# This is an API workspace, having public visibility by default makes perfect sense.
package(default_visibility = ["//visibility:public"])

##############################################################################
# Common
##############################################################################
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@com_google_googleapis_imports//:imports.bzl", "proto_library_with_info")

proto_library(
    name = "{{name}}_proto",
    srcs = [
        {{proto_srcs}}
    ],
    deps = [
        {{proto_deps}}
    ],
)

proto_library_with_info(
    name = "{{name}}_proto_with_info",
    deps = [
        ":{{name}}_proto",
        {{extra_imports}}
    ],
)

##############################################################################
# Java
##############################################################################
load(
{{java_loads}}
)

java_proto_library(
    name = "{{name}}_java_proto",
    deps = [":{{name}}_proto"],
)

{{java_grpc}}

java_gapic_library(
    name = "{{name}}_java_gapic",
    srcs = [":{{name}}_proto_with_info"],
    gapic_yaml = {{gapic_yaml}},
    grpc_service_config = {{grpc_service_config}},
    rest_numeric_enums = {{rest_numeric_enums}},
    service_yaml = {{service_yaml}},
    test_deps = [
        {{java_gapic_test_deps}}
    ],
    transport = {{java_transport}},
    deps = [
        ":{{name}}_java_proto",{{java_gapic_deps}}
    ],
)

java_gapic_test(
    name = "{{name}}_java_gapic_test_suite",
    test_classes = [
        {{java_tests}}
    ],
    runtime_deps = [":{{name}}_java_gapic_test"],
)

# Open Source Packages
java_gapic_assembly_gradle_pkg(
    name = "google-cloud-{{assembly_name}}-{{version}}-java",
    transport = {{java_transport}},
    deps = [
        {{java_gapic_assembly_gradle_pkg_deps}}
    ],
    include_samples = True,
)

##############################################################################
# Go
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "go_gapic_assembly_pkg",
    "go_gapic_library",
    "go_proto_library",
)

go_proto_library(
    name = "{{name}}_go_proto",
    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
    importpath = "{{go_proto_importpath}}",
    protos = [":{{name}}_proto"],
    deps = [
        {{go_proto_deps}}
    ],
)

go_gapic_library(
    name = "{{name}}_go_gapic",
    srcs = [":{{name}}_proto_with_info"],
    grpc_service_config = {{grpc_service_config}},
    importpath = "{{go_gapic_importpath}}",
    metadata = True,
    release_level = "beta",
    rest_numeric_enums = {{rest_numeric_enums}},
    service_yaml = {{service_yaml}},
    transport = {{transport}},
    deps = [
        ":{{name}}_go_proto",{{go_gapic_deps}}
    ],
)

# Open Source Packages
go_gapic_assembly_pkg(
    name = "gapi-cloud-{{assembly_name}}-{{version}}-go",
    deps = [
        ":{{name}}_go_gapic",
        ":{{name}}_go_gapic_srcjar-test.srcjar",
        ":{{name}}_go_gapic_srcjar-metadata.srcjar",
        ":{{name}}_go_gapic_srcjar-snippets.srcjar",
        ":{{name}}_go_proto",
    ],
)

##############################################################################
# Python
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "py_gapic_assembly_pkg",
    "py_gapic_library",
    "py_test",
)

py_gapic_library(
    name = "{{name}}_py_gapic",
    srcs = [":{{name}}_proto"],
    grpc_service_config = {{grpc_service_config}},
    rest_numeric_enums = {{rest_numeric_enums}},
    service_yaml = {{service_yaml}},
    transport = {{transport}},
    deps = [
        {{py_gapic_deps}}
    ],
)

py_test(
    name = "{{name}}_py_gapic_test",
    srcs = [
        "{{name}}_py_gapic_pytest.py",
        "{{name}}_py_gapic_test.py",
    ],
    legacy_create_init = False,
    deps = [":{{name}}_py_gapic"],
)

py_test(
    name = "{{name}}_py_gapic_docstest",
    srcs = [
        "{{name}}_py_gapic_pydocstest.py",
        "{{name}}_py_gapic_docstest.py",
    ],
    legacy_create_init = False,
    deps = [":{{name}}_py_gapic"],
)

# Open Source Packages
py_gapic_assembly_pkg(
    name = "{{assembly_name}}-{{version}}-py",
    deps = [
        ":{{name}}_py_gapic",
    ],
)

##############################################################################
# PHP
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "php_gapic_assembly_pkg",
    "php_gapic_library",
    "php_proto_library",
)

php_proto_library(
    name = "{{name}}_php_proto",
    deps = [":{{name}}_proto"],
)

php_gapic_library(
    name = "{{name}}_php_gapic",
    srcs = [":{{name}}_proto_with_info"],
    grpc_service_config = {{grpc_service_config}},
    rest_numeric_enums = {{rest_numeric_enums}},
    migration_mode = {{migration_mode}},
    service_yaml = {{service_yaml}},
    transport = {{transport}},
    deps = [
        ":{{name}}_php_proto",
    ],
)

# Open Source Packages
php_gapic_assembly_pkg(
    name = "google-cloud-{{assembly_name}}-{{version}}-php",
    deps = [
        ":{{name}}_php_gapic",
        ":{{name}}_php_proto",
    ],
)

##############################################################################
# Node.js
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "nodejs_gapic_assembly_pkg",
    "nodejs_gapic_library",
)

nodejs_gapic_library(
    name = "{{name}}_nodejs_gapic",
    package_name = "@google-cloud/{{name}}",
    src = ":{{name}}_proto_with_info",
    extra_protoc_parameters = ["metadata"],
    grpc_service_config = {{grpc_service_config}},
    package = "{{package}}",
    rest_numeric_enums = {{rest_numeric_enums}},
    service_yaml = {{service_yaml}},
    transport = {{transport}},
    deps = [],
)

nodejs_gapic_assembly_pkg(
    name = "{{assembly_name}}-{{version}}-nodejs",
    deps = [
        ":{{name}}_nodejs_gapic",
        ":{{name}}_proto",{{extra_protos_nodejs}}
    ],
)

##############################################################################
# Ruby
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "ruby_gapic_assembly_pkg",
    "ruby_cloud_gapic_library",
    "ruby_grpc_library",
    "ruby_proto_library",
)

ruby_proto_library(
    name = "{{name}}_ruby_proto",
    deps = [":{{name}}_proto"],
)

ruby_grpc_library(
    name = "{{name}}_ruby_grpc",
    srcs = [":{{name}}_proto"],
    deps = [":{{name}}_ruby_proto"],
)

ruby_cloud_gapic_library(
    name = "{{name}}_ruby_gapic",
    srcs = [":{{name}}_proto_with_info"],
    extra_protoc_parameters = [
        "ruby-cloud-gem-name=google-cloud-{{assembly_name}}-{{version}}",
    ],
    grpc_service_config = {{grpc_service_config}},
    rest_numeric_enums = {{rest_numeric_enums}},
    service_yaml = {{service_yaml}},
    transport = {{transport}},
    deps = [
        ":{{name}}_ruby_grpc",
        ":{{name}}_ruby_proto",
    ],
)

# Open Source Packages
ruby_gapic_assembly_pkg(
    name = "google-cloud-{{assembly_name}}-{{version}}-ruby",
    deps = [
        ":{{name}}_ruby_gapic",
        ":{{name}}_ruby_grpc",
        ":{{name}}_ruby_proto",
    ],
)

##############################################################################
# C#
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "csharp_gapic_assembly_pkg",
    "csharp_gapic_library",
    "csharp_grpc_library",
    "csharp_proto_library",
)

csharp_proto_library(
    name = "{{name}}_csharp_proto",
    extra_opts = [{{csharp_proto_extra_opts}}],
    deps = [":{{name}}_proto"],
)

csharp_grpc_library(
    name = "{{name}}_csharp_grpc",
    srcs = [":{{name}}_proto"],
    deps = [":{{name}}_csharp_proto"],
)

csharp_gapic_library(
    name = "{{name}}_csharp_gapic",
    srcs = [":{{name}}_proto_with_info"],
    common_resources_config = "@gax_dotnet//:Google.Api.Gax/ResourceNames/CommonResourcesConfig.json",
    grpc_service_config = {{grpc_service_config}},
    rest_numeric_enums = {{rest_numeric_enums}},
    service_yaml = {{service_yaml}},
    deps = [
        ":{{name}}_csharp_grpc",
        ":{{name}}_csharp_proto",
    ],
)

# Open Source Packages
csharp_gapic_assembly_pkg(
    name = "google-cloud-{{assembly_name}}-{{version}}-csharp",
    deps = [
        ":{{name}}_csharp_gapic",
        ":{{name}}_csharp_grpc",
        ":{{name}}_csharp_proto",
    ],
)

##############################################################################
# C++
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "cc_grpc_library",
    "cc_proto_library",
)

cc_proto_library(
    name = "{{name}}_cc_proto",
    deps = [":{{name}}_proto"],
)

cc_grpc_library(
    name = "{{name}}_cc_grpc",
    srcs = [":{{name}}_proto"],
    grpc_only = True,
    deps = [":{{name}}_cc_proto"],
)
